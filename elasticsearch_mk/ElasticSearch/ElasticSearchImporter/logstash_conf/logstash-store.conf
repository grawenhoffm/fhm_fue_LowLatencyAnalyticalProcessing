input {
  file {
    path => ["C:\Users\Marco\OneDrive\Dokumente\Elastic\prepared_csv\store.csv"]
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}
filter {
	if [path] == "C:\Users\Marco\OneDrive\Dokumente\Elastic\prepared_csv\store.csv" {
  		ruby {
        	code => "
                hash = event.to_hash
                hash.each do |k,v|
                        if v == nil
                                event.remove(k)
                        end
                end
        	"
  		}
    	csv {
       		separator => "|"
       		skip_empty_columns => true
       		columns => ["s_store_sk","s_store_id","s_rec_start_date","s_rec_end_date","s_closed_date_sk","s_store_name","s_number_employees","s_floor_space","s_hours","s_manager","s_market_id","s_geography_class","s_market_desc","s_market_manager","s_division_id","s_division_name","s_company_id","s_company_name","s_street_number","s_street_name","s_street_type","s_suite_number","s_city","s_county","s_state","s_zip","s_country","s_gmt_offset","s_tax_precentage"]
       		convert => {
    	  		"s_store_sk" => "integer" 
"s_rec_start_date" => "date" 
"s_rec_end_date" => "date" 
"s_closed_date_sk" => "integer" 
"s_number_employees" => "integer" 
"s_floor_space" => "integer" 
"s_market_id" => "integer" 
"s_division_id" => "integer" 
"s_company_id" => "integer" 
"s_gmt_offset" => "float" 
"s_tax_precentage" => "float" 

       		}
    	}
    	mutate {
  			remove_field => [ "message" ]
  			remove_field => [ "host" ]
  		}
  	}
}
output {
   if [path] == "C:\Users\Marco\OneDrive\Dokumente\Elastic\prepared_csv\store.csv" {
     elasticsearch {
        hosts => "http://localhost:9200"
        index => "tpcds"
        document_type => "store"
        user => elastic
        password => changeme
     }
   }
}
